.bluegenesToolBioactiviyGraph {
	// put all your css classes inside this block. Keeping them
	// nested under the tool name prevents your styles from
	// leaking out and affecting other elements by accident.

	// If you want to learn more about LESS, visit lesscss.org.

	// Tips to ensure your tool works well in BlueGenes:
	// - Pretend that the browser window your tool runs in is the container provided by BlueGenes
	// - Use all the width you're given, but only the height you need (hardcoding to a specific height is fine)
	// - Avoid vw/vh values as these will work unexpectedly when your tool is used in BlueGenes
	// - Do not have a header for your tool; BlueGenes provides one above the container
	// - BlueGenes will ensure your tool is scrollable if it's larger than the container
	// - The space given by BlueGenes is precious; make your visualization occupy most of it and avoid having settings that occupy a large part of it
	// - Remember that loaders should only apply to your container, not fade out the whole window

	// this is just an example class for root div element, you may modify or delete it as per your usecase
	.rootContainer {
		padding: 10px;
	}

	/* Overall CSS for the entire Graph Area */
	div.targetmineGraphDisplayer{
		display: flex;
		flex-direction: row;
		width: 100%;
		height: 400px;
		justify-content: center;
	}
	/* Definitions for the SVG (left) area of the graph */
	svg.targetmineGraphSVG{
		flex-grow: 1;
		width: 100%;
		height: inherit; /* auto; */
	}
	
	/* Definitions for the Controls (right) area of the graph */
	div.rightColumn{
		display: flex;
		flex-direction: column;
		width: 20%;
		background-color: aliceblue;
	}
	div.flex-table{
		display: flex;
		box-sizing: border-box;
		flex-direction: column;
		flex-wrap: nowrap;
		justify-content: space-evenly;
	}
	div.flex-row{
		display: flex;
		flex-direction: row;
		flex-wrap: nowrap;
		justify-content: space-evenly;
	}

	.row-cell{
		width: 10%;
		min-width: 10px;
		max-width: 100px;
		height: 20px;
	}
	.row-label{
		justify-content: left;
		width: 80%;
	}
	
	.row-small-close{
		color: #aaa;	
		width: 10%;
		height: 20px;
	}
	.row-small-close:hover,
	.row-small-close:focus {
		color: black;
		text-decoration: none;
		cursor: pointer;
	}

	button.flex-button{
		width: 50%;
		min-width: 50px;
		max-width: 100px;
		align-self: center;
	}
	
	input[type=checkbox]{
		height: inherit;
	}
	
	path.violin{
		stroke: none;
		fill: #C0C0C0;
	}
	
	/* Definitions for Modal components */
	div.targetmineGraphModal {
		display: none; /* Hidden by default */
		flex-direction: column;
		position: absolute; /* Stay in place */
		z-index: 1; /* Sit on top */
		width: 50%; /* Parent width */
		overflow: auto; /* Enable scroll if needed */
		background-color: rgb(217,217,217); /* grayish */
		align-self: center;
	}

	div.modal-content {
		flex:1;
		display: grid;
		background-color: rgb(217,217,217);
		grid-template-columns: 1fr 1fr;
		grid-gap: 5px;
	}

	label.modal-label {
		justify-self: right;
	}
	
	button.modal-button{
		width: 40%;
		justify-self: center;
	}
	
	input[type=color]{
		grid-column: 3;
	}
	
	input[type=radio]{
		grid-column: 2;
	}
	

}
